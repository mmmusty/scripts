parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"Ph2E":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.API_URI=void 0;const e="https://api.tribalwarshelp.com/graphql";exports.API_URI=e;var r=function(){let{query:r,variables:t={}}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return fetch(e,{method:"POST",body:JSON.stringify({query:r,variables:t}),headers:{"Content-Type":"application/json"}}).then(e=>e.json()).then(e=>{let{data:r,errors:t}=e;if(t&&Array.isArray(t)&&t.length>0)throw new Error(t[0].message);return new Promise(e=>e(r))})};exports.default=r;
},{}],"DMkL":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var e=()=>window.location.host.split(".")[0];exports.default=e;
},{}],"chDM":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.POPUP_SELECTOR=void 0;const e=".popup_helper",t="#inline_popup";exports.POPUP_SELECTOR=t;var o=function(){let{e:e,title:o,html:n,id:l}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const p=document.querySelector(t);p&&(p.style.width="auto",p.style.maxWidth="1000px"),p.classList.contains("show")?(p.querySelector("#inline_popup_title").innerHTML=o,p.querySelector("#inline_popup_content").innerHTML=n):inlinePopup(e,l,null,{offset_x:0,offset_y:0},n,o);const i=document.querySelector(".popup_helper");i&&(i.style.width="auto",i.style.position="fixed",i.style.zIndex="50001")};exports.default=o;
},{}],"H9GS":[function(require,module,exports) {
"use strict";var e=i(require("./libs/requestCreator")),t=i(require("./utils/getCurrentServer")),n=o(require("./utils/showPopup"));function r(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return r=function(){return e},e}function o(e){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=r();if(t&&t.has(e))return t.get(e);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var a=o?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,t&&t.set(e,n),n}function i(e){return e&&e.__esModule?e:{default:e}}const a=(0,t.default)(),l="sideOneAdd",s="sideOneInputs",d="sideTwoAdd",c="sideTwoInputs",u="to",b="from",p="warStatsResult",v="\n  query tribes($server: String!, $filter: TribeFilter) {\n    tribes(server: $server, filter: $filter) {\n      items {\n        id\n        tag\n      }\n    }\n  }\n",m="\n  query ennoblements($server: String!, $filter: EnnoblementFilter) {\n    ennoblements(server: $server, filter: $filter) {\n      total\n    }\n  }\n",f=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n='\n    <div>\n      <h3>Conquers:</h3>\n      <p style="margin: 0;"><strong>Side one: '.concat(e,'</strong></p>\n      <p style="margin: 0;"><strong>Side two: ').concat(t,'</strong></p>\n      <p style="margin: 0;"><strong>Difference: ').concat(Math.abs(e-t),'</strong></p>\n      <hr style="margin: 10px 0;" />\n    </div>\n  ');document.querySelector("#warStatsResult").innerHTML=n},y=e=>()=>{const t=document.createElement("div");t.innerHTML='\n        <label>Tribe tag: </label>\n        <input type="text" required />\n        <button type="button" class="btn">Delete</button>\n    ',t.querySelector("button").addEventListener("click",()=>{t.remove()}),e.appendChild(t)},g=async t=>{t.preventDefault();const r=[],o=[];if(t.target.querySelectorAll("#".concat("sideOneInputs"," input")).forEach(e=>{e.value.trim()&&r.push(e.value.trim())}),t.target.querySelectorAll("#".concat("sideTwoInputs"," input")).forEach(e=>{e.value.trim()&&o.push(e.value.trim())}),console.log("sideOneTags",r,"sideTwoTags",o),0===r.length)return UI.ErrorMessage("Not enough tribes added to the side one.");if(0===o.length)return UI.ErrorMessage("Not enough tribes added to the side two.");const i=document.querySelectorAll("".concat(n.POPUP_SELECTOR," form #").concat("from"," input"));let l;2===i.length&&i[0].value&&i[1].value&&(l=new Date("".concat(i[0].value,"T").concat(i[1].value,":00")));const s=document.querySelectorAll("".concat(n.POPUP_SELECTOR," form #").concat("to"," input"));let d;2===s.length&&s[0].value&&s[1].value&&(d=new Date("".concat(s[0].value,"T").concat(s[1].value,":00"))),t.target.querySelectorAll("button").forEach(e=>{e.disabled=!0});try{const{tribes:t}=await(0,e.default)({query:v,variables:{server:a,filter:{tag:[...r,...o]}}}),n=t.items.filter(e=>r.some(t=>e.tag===t)).map(e=>e.id),i=t.items.filter(e=>o.some(t=>e.tag===t)).map(e=>e.id);console.log(n,i);const{ennoblements:s}=await(0,e.default)({query:m,variables:{server:a,filter:{newOwnerTribeID:n,oldOwnerTribeID:i,ennobledAtGTE:l,ennobledAtLTE:d}}}),{ennoblements:u}=await(0,e.default)({query:m,variables:{server:a,filter:{newOwnerTribeID:i,oldOwnerTribeID:n,ennobledAtGTE:l,ennobledAtLTE:d}}});console.log("sideOneEnnoblements",s,"sideTwoEnnoblements",u),f(s.total,u.total)}catch(c){console.log("handleFormSubmit",c)}t.target.querySelectorAll("button").forEach(e=>{e.disabled=!1})},w=e=>{const t='\n        <form>\n            <div id="'.concat("warStatsResult",'">\n            </div>\n            <div style="margin-bottom: 10px;">\n              <div id="').concat("from",'">\n                <label>From: </label>\n                <input type="date" required />\n                <input type="time" required />\n              </div>\n              <div id="').concat("to",'">\n                <label>To: </label>\n                <input type="date" required />\n                <input type="time" required />\n              </div>\n            </div>\n            <div style="display: flex; justify-content: space-between; margin-bottom: 10px;">\n                <div>\n                    <h3>Side one</h3>\n                    <div id="').concat("sideOneInputs",'">\n                    </div>\n                    <button id="').concat("sideOneAdd",'" class="btn" type="button">Add Tribe</button>\n                </div>\n                <div style="margin: 0 5px;"></div>\n                <div>\n                    <h3>Side two</h3>\n                    <div id="').concat("sideTwoInputs",'">\n                    </div>\n                    <button id="').concat("sideTwoAdd",'" class="btn" type="button">Add tribe</button>\n                </div>\n            </div>\n            <div style="text-align: center;">\n              <button class="btn" type="submit">Generate war stats</button>\n            </div>\n        </form>\n    ');(0,n.default)({title:"War Stats Generator",id:"warStats",html:t,e:e}),document.querySelector("".concat(n.POPUP_SELECTOR," form #").concat("sideOneAdd")).addEventListener("click",y(document.querySelector("#sideOneInputs"))),document.querySelector("".concat(n.POPUP_SELECTOR," form #").concat("sideTwoAdd")).addEventListener("click",y(document.querySelector("#sideTwoInputs"))),document.querySelector("".concat(n.POPUP_SELECTOR," form")).addEventListener("submit",g)},h=()=>{const e=document.createElement("div"),t=document.createElement("button");t.innerHTML="Generate war stats",t.addEventListener("click",w),e.appendChild(t),document.querySelector("#wars_ranking_table").parentElement.prepend(e)};!function(){try{h()}catch(e){console.log("war stats",e)}}();
},{"./libs/requestCreator":"Ph2E","./utils/getCurrentServer":"DMkL","./utils/showPopup":"chDM"}]},{},["H9GS"], null)